💡 엘리먼트 스타일 관리 방식

| 전략                               | 설명                                                                                          |
| ----------------------------- | ---------------------------------------------------------------------------- |
| `&__element`                    | 컴포넌트 안에 엘리먼트를 네이밍하여 포함시킴 (BEM 구조와 궁합)      |
| 중첩 사용 제한                 | 중첩은 최대 2~3단계까지만. (깊은 중첩은 유지보수에 불리함)             |
| 엘리먼트 단위 변수 사용    | 필요시 `$_card-padding` 등의 (지역 변수 선언)                                  |

💡 예시

| 용어                | SCSS 예시                      | 설명                                                        |
| ----------------- | ---------------------------- | ------------------------------------------------- |
| Block               | `.card`                            | 컴포넌트 자체                                           |
| Element            | `.card__title`, `.btn__icon`   | 엘리먼트,컴포넌트 내부 구성요소                  |
| Modifier            | `.card--featured`              | 스타일을 변형하는 옵션                               |


💡 네이밍 규칙 
1. BEM + SMACSS 조합
2. 클래스명은 소문자, 하이픈(-) 구분
3. JS 제어용 클래스는 js-로 시작 (스타일 적용 ❌)
4. 상태 표현은 is-, has- 사용 (is-active, has-error)
5. 의미 없는 깊은 중첩 X : .card__content__title ❌ → .card__title ✅


💡 규칙 요약
| 규칙                                      | 예시                                       | 설명                                                      |
| ---------------------------------- | ------------------------------------ | ----------------------------------------------- |
| 컴포넌트명 우선                      | `.btn`, `.card`                             | 재사용 가능한 UI 구성 단위                       |
| 엘리먼트는 `__`                        | `.card__header`                          | 내부 구성요소                                         |
| 변형은 `--`                              | `.btn--danger`, `.card--featured`    | 디자인이나 상태의 변형                            |
| 상태는 `is-` 또는 `has-` 접두사    | `.is-active`, `.has-error`                | 사용자 상호작용 기반 상태 표현                 |
| 유틸리티는 `u-`                       | `.u-mt-16`, `.u-text-center`           | 단일 속성 유틸리티 (Tailwind 스타일)          |
| JavaScript hook은 `js-` 접두사    | `js-toggle`, `js-modal`                  | JS로 제어하는 요소 표시용 (스타일 적용 X)  |


💡 참고 
BEM 공식 사이트 https://getbem.com/

SMACSS 공식 가이드 https://smacss.com/


💡 색상 변수 명시 가이드
##### _color.scss에서 작업#####
**** $color-name : #색상코드
**** --기능이름 : $color-name

##### 개별.scss에서 작업#####
**** 실제 불러오는 방법 → var(--기능이름)

💡 스타일 적용 범위 가이드
_global.scss : 초기 리셋이 된 후 기본값으로 가져가는 스타일(어떤 프로젝트든 무조건 동일하게 가져감)
_button.scss, _checkbox.scss 등 : 세부 디자인, 프로젝트에서 나온 디자인을 입히는 공간(_variable.scss 포함)